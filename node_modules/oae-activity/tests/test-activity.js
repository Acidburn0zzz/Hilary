/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 * 
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var assert = require('assert');

var log = require('oae-logger').logger('test-activity');
var RestAPI = require('oae-rest');
var RestContext = require('oae-rest/lib/model').RestContext;
var TestsUtil = require('oae-tests');

describe('Content Activity', function() {

    // Rest context that can be used for anonymous requests on the cambridge tenant
    var anonymousCamRestContext = null;
    // Rest context that can be used every time we need to make a request as a tenant admin
    var camAdminRestContext = null;

    /**
     * Function that will fill up the tenant admin and anymous rest context
     */
    before(function(callback) {
        // Fill up the anonymous cam rest context
        anonymousCamRestContext = TestsUtil.createTenantRestContext(global.oaeTests.tenants.cam.host);
        // Fill up global admin rest context
        camAdminRestContext = TestsUtil.createTenantAdminRestContext(global.oaeTests.tenants.cam.host);
        callback();
    });

    it('verify content activity producer', function(callback) {
        // restCtx, username, password, displayName, additionalOptions, callback
        var jackUsername = TestsUtil.generateTestUserId('jack');
        RestAPI.User.createUser(camAdminRestContext, jackUsername, 'password', 'Jack McJackerson', null, function(err, jack) {
            assert.ok(!err);
            var jackCtx = TestsUtil.createTenantRestContext(global.oaeTests.tenants.cam.host, jackUsername, 'password');
            // restCtx, name, description, visibility, link, managers, viewers, callback
            RestAPI.Content.createLink(jackCtx, 'Google', 'Google', 'public', 'http://www.google.ca', [], [], function(err, link) {
                assert.ok(!err);

                setTimeout(RestAPI.Activity.getCurrentActivityStream, 100, jackCtx, null, function(err, activityStream) {
                    assert.ok(!err);
                    assert.ok(activityStream);
                    callback();
                });
            });
        });
    });
});
        