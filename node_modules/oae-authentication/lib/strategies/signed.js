/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 * 
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var passport = require('passport');
var util = require('util');

var Context = require('oae-context').Context;
var PrincipalsAPI = require('oae-principals');
var Signature = require('oae-util/lib/signature');


var Strategy = function() {
    passport.Strategy.call(this);
    this.name = 'signed';
};

/**
 * Inherit from `passport.Strategy`.
 */
util.inherits(Strategy, passport.Strategy);


/**
 * Authenticate request based on the contents of request parameters.
 *
 * @param   {Request}   req
 * @api protected
 */
Strategy.prototype.authenticate = function(req) {
    var expires = parseInt(req.body.expires, 10);
    var signature = req.body.signature;
    var userId = req.body.userId;
    var tenant = req.ctx.tenant().alias;
    if (!expires || !signature || !tenant || !userId) {
        return this.fail(new Error('Missing credentials'));
    }
  
    var self = this;
  
    // Check the signature.
    if (Signature.verifyExpiringSignature(tenant, expires, userId, signature)) {
        var context = new Context(tenant, null);
        PrincipalsAPI.getUser(context, userId, function(err, user) {
            if (err && err.code !== 404) {
                return self.error(err);
            }
            if ((err && err.code === 404) && !user) {
                return self.fail(err.msg);
            }
            self.success(user);
        });
    } else {
        self.fail('Invalid credentials');
    }
};

/**
 * Expose `Strategy`.
 */ 
module.exports = Strategy;
