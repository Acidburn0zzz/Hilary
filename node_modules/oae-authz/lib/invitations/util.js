/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');

var OaeUtil = require('oae-util/lib/util');

var AuthzInvitationsDAO = require('oae-authz/lib/invitations/dao');
var AuthzUtil = require('oae-authz/lib/util');
var Validator = require('oae-authz/lib/validator').Validator;

var computeInvitationRolesAfterChanges = module.exports.computeInvitationRolesAfterChanges = function(resourceId, changes, opts, callback) {
    // If no resource id is provided, we treat this invocation as though the invitations list is
    // empty (i.e., a resource is currently being created with invitations)
    OaeUtil.invokeIfNecessary(resourceId, AuthzInvitationsDAO.getAllInvitationsByResourceId, resourceId, function(err, invitations) {
        if (err) {
            return callback(err);
        }

        var invitationRolesBefore = _.chain(invitations)
            .indexBy('email')
            .mapObject(function(invitation) {
                return invitation.role;
            })
            .value();
        var changeResult = AuthzUtil.computeRoleChanges(invitationRolesBefore, changes, opts);
        return callback(null, changeResult.changes, changeResult.roles, changeResult.ids);
    });
};
