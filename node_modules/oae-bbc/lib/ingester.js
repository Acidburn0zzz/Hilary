var _ = require('underscore');
var fs = require('fs');
var request = require('request');

var ContentAPI = require('oae-content');
var FoldersAPI = require('oae-folders');
var log = require('oae-logger').logger('oae-acroplis');

var AcropolisAPI = require('./api');


var processFolder = module.exports.processFolder = function(ctx, callback) {
    FoldersAPI.createFolder(ctx, 'Viking tools', 'Tools used by the vikings.\n\nEverything from polished stones over arrowheads  to flint blades', null, {}, function(err, folder) {
        if (err) {
            console.log(err);
            return callback(err);
        }

        loadContent(ctx, [folder.id], callback);
    });
};


var process = module.exports.process = function(ctx, callback) {
    loadContent(ctx, [], callback);
};

var loadContent = function(ctx, folders, callback) {
    console.log('Adding to:');
    console.log(folders);
    fs.readFile('data_with_locations.json', function(err, data) {
        if (err) {
            return callback(err);
        }

        var items = JSON.parse(data);

        items = _.uniq(items, 'image');

        var contentItems = [];
        var done = _.after(items.length, function() {
            return callback(null, contentItems);
        });



        var errorCallback = _.once(callback);

        _.each(items, function(item) {
            console.log(item);
            if (!item.image) {
                console.log('Skipping image');
                return done();
            }

            var filename = item.image.split('/').pop();

            try {
                var imageStat = fs.statSync('images/' + filename);
                var file = {
                    'size': imageStat.size,
                    'name': filename,
                    'path': '/Users/sg555/projects/apereo/oae/Hilary/images/' + filename
                };
                var extra = {
                    'location': item.location
                };
                ContentAPI.createFile(ctx, item.displayName, item.description, null, file, extra, {}, folders, function(err, contentItem) {
                    if (err) {
                        log().error({'err': err});
                        return errorCallback(err);
                    }

                    log().info({'contentItem': contentItem}, 'Created content item');
                    contentItems.push(contentItem);
                    done();
                });
            } catch (err) {
                console.log(err);
            }
        });
    });
};
