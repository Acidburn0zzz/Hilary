/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 * 
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

///////////
// Model //
///////////

module.exports.Constants = {
    'visibility': {
        'PUBLIC': 'public',
        'LOGGEDIN': 'loggedin',
        'PRIVATE': 'private'
    },
    'roles': {
        'MANAGER': 'manager',
        'VIEWER': 'viewer'
    },
    'contentTypes': ['sakaidoc', 'link', 'file']
};

module.exports.Content = function(tenant, contentId, visibility, name, description, contentType, createdBy, created, lastModified) {
    var that = {};

    that.tenant = tenant;
    that.contentId = contentId;
    that.homePath = '/content/' + that.contentId;
    that.visibility = visibility;
    that.name = name;
    that.description = description;
    that.contentType = contentType;
    that.createdBy = createdBy;
    that.created = created;
    that.lastModified = lastModified;

    return that;
};

/**
 * The revision model.
 * @param {String}  thingId     The ID of the 'thing' that is getting a revision. This can be a contentId, pageId, ..
 * @param {Number}  created     The timestamp that this revision was created in milliseconds since epoch.
 * @param {String}  createdBy   The ID of the user who created this revision.
 * @param {String}  uri         The storage URI for this revision.
 * @param {String}  [filename]  The optional filename that is associated with this revision.
 * @param {String}  [mimetype]  The optional mimetype that is associated with this revision.
 */
module.exports.Revision = function(thingId, created, createdBy, uri, filename, mimetype) {
    var that = {};
    that.thingId = thingId;
    that.created = created;
    that.createdBy = createdBy;
    that.uri = uri;
    that.filename = filename;
    that.mimetype = mimetype;
    return that;
};