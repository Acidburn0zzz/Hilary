/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
var _ = require('underscore');
var MQ = require('oae-util/lib/mq');
var SearchAPI = require('oae-search');
var SearchConstants = require('oae-search/lib/constants').SearchConstants;

var ContentAPI = require('oae-content');
var ContentConstants = require('oae-content/lib/constants').ContentConstants;



////////////////////
// INDEXING TASKS //
////////////////////

// Binds the local events to the MQ task queue to assign indexing jobs

ContentAPI.on(ContentConstants.events.CREATED_CONTENT, function(ctx, content, members) {
    MQ.submit(SearchConstants.mq.TASK_INDEX_DOCUMENT, {
        'resourceType': 'content',
        'resources': [{
            'id': content.contentId,
            'content': content,
            'members': _.keys(members)
        }]
    });
});

ContentAPI.on(ContentConstants.events.UPDATED_CONTENT, function(ctx, contentId, content) {
    MQ.submit(SearchConstants.mq.TASK_INDEX_DOCUMENT, {
        'resourceType': 'content',
        'resources': [{
            'id': contentId,
            'content': content
        }]
    });
});

ContentAPI.on(ContentConstants.events.UPDATED_CONTENT_MEMBERSHIPS, function(ctx, contentId) {
    MQ.submit(SearchConstants.mq.TASK_INDEX_DOCUMENT, {
        'resourceType': 'content',
        'resources': [{'id': contentId}]
    });
});

ContentAPI.on(ContentConstants.events.DELETED_CONTENT, function(ctx, contentId) {
    MQ.submit(SearchConstants.mq.TASK_DELETE_DOCUMENT, {'resourceType': 'content', 'id': contentId});
});



////////////////////////
// DOCUMENT PRODUCERS //
////////////////////////

/**
 * Produces search documents for 'content' resources
 *
 * @see SearchAPI#registerDocumentProducer
 */
var _produceSearchDocuments = function(resources, callback, docs) {
    docs = docs || [];
    if (resources.length === 0) {
        return callback(null, docs);
    }

    var resource = resources.shift();
    var contentId = resource.id;
    var content = resource.content;
    var members = resource.members;
    ContentAPI.getContentWithMembers(contentId, content, members, function(err, content, members) {
        if (err) {
            return callback(err);
        }

        // generate the 'general' string for sort and 
        var general = '';
        if (content.name) {
            general += ' ' + content.name;
        }

        if (content.description) {
            general += ' ' + content.description;
        }

        general = general.trim();

        // push the document into the list and recursively process the next document
        docs.push({
            resourceType: 'content',
            resourceSubType: content.contentType,
            id: content.contentId,
            tenantId: content.tenant,
            name: content.name,
            description: content.description,
            visibility: content.visibility,
            general: general,
            sort: general,
            access: members
        });

        return _produceSearchDocuments(resources, callback, docs);
    });
}

SearchAPI.registerDocumentProducer('content', _produceSearchDocuments);

