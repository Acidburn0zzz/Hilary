/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 * 
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var Tenant = require('oae-tenants/lib/model').Tenant;
var User = require('oae-principals/lib/model.user').User;
var PrincipalAPI = require('oae-principals');

var ContentAPI = require('oae-content');

// Data used inside of the tests
var tenant1 = new Tenant('cam', 'Cambridge University', 'Cambridge University description', 2001);
var tenant2 = new Tenant('gt', 'Georgia Tech', 'Georgia Tech description', 2002);

/**
 * TODO
 */
var setUpUsers = function(callback) {
    var r = Math.floor(Math.random() * 10000);
    var users = [new User(tenant1, 'u:cam:nm417-' + r, 'nm417-' + r, 'public', 'Nicolaas', 'Matthijs', 'Nicolaas Matthijs'),
                 new User(tenant1, 'u:cam:simong-' + r, 'simong-' + r, 'loggedin', 'Simon', 'Gaeremynck', 'Simon Gaeremynck'),
                 new User(tenant1, 'u:cam:bp323-' + r, 'bp323-' + r, 'private', 'Bert', 'Pareyn', 'Bert Pareyn'),
                 new User(tenant2, 'u:gt:branden-' + r, 'branden-' + r, 'public', 'Branden', 'Visser', 'Branden Visser')];
    var done = 0;
    var createUserDone = function(err) {
        if (err) {
            throw err;
        }
        done++;
        if (done === users.length) {
            callback(users);
        }
    };
    // Create users
    for (var u = 0; u < users.length; u++) {
        PrincipalAPI.createUser(users[u].tenant, users[u].username, 'password' + u, users[u].privacy, users[u].firstName, users[u].lastName, users[u].displayName, createUserDone);
    }
};

/**
 * TODO
 * @param {Object} test //TODO
 */
module.exports.createContent = function(test) {
    test.expect(16);

    setUpUsers(function(users) {
        // Create one as anon user
        ContentAPI.createContent(users[0].tenant, null, 'public', 'Test Content 1', 'Test content description 1', 'link', function(err, contentObj) {
            test.ok(err);
            test.ok(!contentObj);
            // Create one with all required fields
            ContentAPI.createContent(users[0].tenant, users[0], 'public', 'Test Content 2', 'Test content description 2', 'link', function(err, contentObj) {
                test.ok(!err);
                test.ok(contentObj.contentId);
                // Create one without description
                ContentAPI.createContent(users[0].tenant, users[0], 'public', 'Test Content 3', null, 'link', function(err, contentObj) {
                    test.ok(!err);
                    test.ok(contentObj.contentId);
                    // Create one without type
                    ContentAPI.createContent(users[0].tenant, users[0], 'public', 'Test Content 4', 'Test content description 4', null, function(err, contentObj) {
                        test.ok(err);
                        test.ok(!contentObj);
                        // Create one without title
                        ContentAPI.createContent(users[0].tenant, users[0], 'public', null, 'Test content description 5', 'link', function(err, contentObj) {
                            test.ok(err);
                            test.ok(!contentObj);
                            // Create one without permission
                            ContentAPI.createContent(users[0].tenant, users[0], null, 'Test Content 6', 'Test content description 6', 'link', function(err, contentObj) {
                                test.ok(!err);
                                test.ok(contentObj.contentId);
                                // Check if the permission has been set to public (default)
                                ContentAPI.getContent(users[0], contentObj.contentId, function(err, contentObj) {
                                    test.ok(!err);
                                    test.equal(contentObj.visibility, 'public');
                                    // Create one without tenant
                                    ContentAPI.createContent(null, users[0], 'public', 'Test Content 7', 'Test content description 7', 'link', function(err, contentObj) {
                                        test.ok(err);
                                        test.ok(!contentObj);
                                        test.done();
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });
    });
};

/**
 * TODO
 * @param {Object} test //TODO
 */
module.exports.createPublicContentItem = function(test) {
    test.expect(35);

    setUpUsers(function(users) {
        // Create a public content item
        ContentAPI.createContent(users[0].tenant, users[0], 'public', 'Test Content 1', 'Test content description 1', 'link', function(err, content) {
            test.ok(!err);
            test.ok(content.contentId);
            // Get the piece of content as the person who created the content
            ContentAPI.getContent(users[0], content.contentId, function(err, contentObj) {
                test.ok(!err);
                test.ok(contentObj.contentId);
                test.equal(contentObj.tenant, users[0].tenant.alias);
                test.equal(contentObj.visibility, 'public');
                test.equal(contentObj.title, 'Test Content 1');
                test.equal(contentObj.description, 'Test content description 1');
                test.equal(contentObj.contentType, 'link');
                test.ok(contentObj.lastModified);
                // Get the piece of content as a different logged in user
                ContentAPI.getContent(users[1], content.contentId, function(err, contentObj) {
                    test.ok(!err);
                    test.ok(contentObj.contentId);
                    test.equal(contentObj.tenant, users[0].tenant.alias);
                    test.equal(contentObj.visibility, 'public');
                    test.equal(contentObj.title, 'Test Content 1');
                    test.equal(contentObj.description, 'Test content description 1');
                    test.equal(contentObj.contentType, 'link');
                    test.ok(contentObj.lastModified);
                    // Get the piece of content as an anonymous user
                    ContentAPI.getContent(null, content.contentId, function(err, contentObj) {
                        test.ok(!err);
                        test.ok(contentObj.contentId);
                        test.equal(contentObj.tenant, users[0].tenant.alias);
                        test.equal(contentObj.visibility, 'public');
                        test.equal(contentObj.title, 'Test Content 1');
                        test.equal(contentObj.description, 'Test content description 1');
                        test.equal(contentObj.contentType, 'link');
                        test.ok(contentObj.lastModified);
                        // Check if this is part of the creator's library as the creator
                        ContentAPI.getLibraryItems(users[0], users[0].id, function(err, contentItems) {
                            test.ok(!err);
                            test.equal(contentItems.length, 1);
                            test.equal(contentItems[0], content.contentId);
                            // Check if this is part of the creator's library as logged in user
                            ContentAPI.getLibraryItems(users[1], users[0].id, function(err, contentItems) {
                                test.ok(!err);
                                test.equal(contentItems.length, 1);
                                test.equal(contentItems[0], content.contentId);
                                // Check if this is part of the creator's library as anonymous user
                                ContentAPI.getLibraryItems(null, users[0].id, function(err, contentItems) {
                                    test.ok(!err);
                                    test.equal(contentItems.length, 1);
                                    test.equal(contentItems[0], content.contentId);
                                    test.done();
                                });
                            });
                        });
                    });
                });
            });
        });
    });
};

/**
 * TODO
 * @param {Object} test //TODO
 */
module.exports.createLoggedinContentItem = function(test) {
    test.expect(28);

    setUpUsers(function(users) {
        // Create a public content item
        ContentAPI.createContent(users[0].tenant, users[0], 'loggedin', 'Test Content 1', 'Test content description 1', 'link', function(err, content) {
            test.ok(!err);
            test.ok(content.contentId);
            // Get the piece of content as the person who created the content
            ContentAPI.getContent(users[0], content.contentId, function(err, contentObj) {
                test.ok(!err);
                test.ok(contentObj.contentId);
                test.equal(contentObj.tenant, users[0].tenant.alias);
                test.equal(contentObj.visibility, 'loggedin');
                test.equal(contentObj.title, 'Test Content 1');
                test.equal(contentObj.description, 'Test content description 1');
                test.equal(contentObj.contentType, 'link');
                test.ok(contentObj.lastModified);
                // Get the piece of content as a different logged in user
                ContentAPI.getContent(users[1], content.contentId, function(err, contentObj) {
                    test.ok(!err);
                    test.ok(contentObj.contentId);
                    test.equal(contentObj.tenant, users[0].tenant.alias);
                    test.equal(contentObj.visibility, 'loggedin');
                    test.equal(contentObj.title, 'Test Content 1');
                    test.equal(contentObj.description, 'Test content description 1');
                    test.equal(contentObj.contentType, 'link');
                    test.ok(contentObj.lastModified);
                    // Get the piece of content as an anonymous user
                    ContentAPI.getContent(null, content.contentId, function(err, contentObj) {
                        test.ok(err);
                        test.ok(!contentObj);
                        // Check if this is part of the creator's library as the creator
                        ContentAPI.getLibraryItems(users[0], users[0].id, function(err, contentItems) {
                            test.ok(!err);
                            test.equal(contentItems.length, 1);
                            test.equal(contentItems[0], content.contentId);
                            // Check if this is part of the creator's library as logged in user
                            ContentAPI.getLibraryItems(users[1], users[0].id, function(err, contentItems) {
                                test.ok(!err);
                                test.equal(contentItems.length, 1);
                                test.equal(contentItems[0], content.contentId);
                                // Check if this is part of the creator's library as anonymous user
                                ContentAPI.getLibraryItems(null, users[0].id, function(err, contentItems) {
                                    test.ok(!err);
                                    test.equal(contentItems.length, 0);
                                    test.done();
                                });
                            });
                        });
                    });
                });
            });
        });
    });
};

/**
 * TODO
 * @param {Object} test //TODO
 */
module.exports.createPrivateContentItem = function(test) {
    test.expect(21);

    setUpUsers(function(users) {
        // Create a public content item
        ContentAPI.createContent(users[0].tenant, users[0], 'private', 'Test Content 1', 'Test content description 1', 'link', function(err, content) {
            test.ok(!err);
            test.ok(content.contentId);
            // Get the piece of content as the person who created the content
            ContentAPI.getContent(users[0], content.contentId, function(err, contentObj) {
                test.ok(!err);
                test.ok(contentObj.contentId);
                test.equal(contentObj.tenant, users[0].tenant.alias);
                test.equal(contentObj.visibility, 'private');
                test.equal(contentObj.title, 'Test Content 1');
                test.equal(contentObj.description, 'Test content description 1');
                test.equal(contentObj.contentType, 'link');
                test.ok(contentObj.lastModified);
                // Get the piece of content as a different logged in user
                ContentAPI.getContent(users[1], content.contentId, function(err, contentObj) {
                    test.ok(err);
                    test.ok(!contentObj);
                    // Get the piece of content as an anonymous user
                    ContentAPI.getContent(null, content.contentId, function(err, contentObj) {
                        test.ok(err);
                        test.ok(!contentObj);
                        // Check if this is part of the creator's library as the creator
                        ContentAPI.getLibraryItems(users[0], users[0].id, function(err, contentItems) {
                            test.ok(!err);
                            test.equal(contentItems.length, 1);
                            test.equal(contentItems[0], content.contentId);
                            // Check if this is part of the creator's library as logged in user
                            ContentAPI.getLibraryItems(users[1], users[0].id, function(err, contentItems) {
                                test.ok(!err);
                                test.equal(contentItems.length, 0);
                                // Check if this is part of the creator's library as anonymous user
                                ContentAPI.getLibraryItems(null, users[0].id, function(err, contentItems) {
                                    test.ok(!err);
                                    test.equal(contentItems.length, 0);
                                    test.done();
                                });
                            });
                        });
                    });
                });
            });
        });
    });
};