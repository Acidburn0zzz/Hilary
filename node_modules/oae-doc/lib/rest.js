/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var OAE = require('oae-util/lib/oae');
var swagger = require('oae-util/lib/swagger');
var swaggerParam = require('oae-util/lib/swaggerParamTypes');
var DocAPI = require('./api');

/**
 * @REST getDocModulesByType
 * Get list of modules depending on the type
 *
 * @Server      tenant
 * @Method      GET
 * @Path        /doc/{type}
 * @PathParam   {string}     type         The type of modules to list        [backend, frontend]
 * @Return      {string[]}                A JSON array of module names
 */
OAE.tenantRouter.on('get', '/api/doc/:type', function(req, res) {
    DocAPI.getModules(req.params.type, function(err, modules) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200, modules);
    });
});

/**
 * @REST getDocModule
 * Get documentation for a module
 *
 * @Server      tenant
 * @Method      GET
 * @Path        /doc/{type}/{module}
 * @PathParam   {string}     type         The type of modules to list        [backend, frontend]
 * @PathParam   {string}     module       The name of the module
 * @Return      {Doc[]}                   The dox documentation for the module
 */
OAE.tenantRouter.on('get', '/api/doc/:type/:module', function(req, res) {
    DocAPI.getModuleDocumentation(req.params.module, req.params.type, function(err, docs) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200, docs);
    });
});

/**
 * Get the swagger resources json
 */
OAE.tenantRouter.on('get', '/api/swagger', function(req, res) {
    return res.send(200, swagger.getResources(req.ctx));
});

/**
 * Get the swagger apis json
 */
OAE.tenantRouter.on('get', '/api/swagger/:id', function(req, res) {
    return res.send(200, swagger.getApi(req.ctx, req.params.id));
});

// Add the REST models for Docs
/**
 * @RESTModel Doc
 *
 * @Required  [tags, description, code, ignore]
 * @Property  {DocTag[]}      tags            A list of jsdoc tags
 * @Property  {DocDesc}       description     A description of what the code does
 * @Property  {string}        code            The source code being documented
 * @Property  {boolean}       ignore          Whether this block should be ignored by the UI
 * @Property  {DocCtx}        ctx             The documentation context
 * @Property  {boolean}       isPrivate       Whether this section is private
 */

/**
 * @RESTModel DocTag
 *
 * @Required  [type, types, name, description]
 * @Property  {string}        type
 * @Property  {string[]}      types
 * @Property  {string}        items
 * @Property  {string}        name
 * @Property  {string}        description
 */

/**
 * @RESTModel DocDesc
 *
 * @Required  [full, summary, body]
 * @Property  {string}        full
 * @Property  {string}        summary
 * @Property  {string}        body
 */

/**
 * @RESTModel DocCtx
 *
 * @Required  [type, name, value, string]
 * @Property  {string}        type
 * @Property  {string}        name
 * @Property  {string}        value
 * @Property  {string}        string
 */
