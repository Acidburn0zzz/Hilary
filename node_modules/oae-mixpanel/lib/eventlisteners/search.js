/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');

var SearchAPI = require('oae-search');
var SearchConstants = require('oae-search/lib/constants').SearchConstants;

var MixpanelUtil = require('oae-mixpanel/lib/util');

module.exports = function(client) {

    /*!
     * A search request was made
     */
    MixpanelUtil.listen(SearchAPI, SearchConstants.events.SEARCH, function(ctx, searchType, opts, results) {
        var params = MixpanelUtil.getBasicParameters(ctx);

        // Try to determine whether this is an actual search event or
        // a canInteract autosuggest. There's no inherit searchType or
        // option that determines this. However, a `general` search with
        // an `_interact` scope through just the `user` and `group` resource
        // types is considered to be a canInteract autosuggest search
        var eventName = 'search';
        if (searchType === 'general' &&
            opts.scope === SearchConstants.general.SCOPE_INTERACT &&
            opts.searchAllResourceTypes === false &&
            opts.resourceTypes && opts.resourceTypes && opts.resourceTypes.length === 2 && (
                (opts.resourceTypes[0] === SearchConstants.general.RESOURCE_TYPE_USER && opts.resourceTypes[1] === SearchConstants.general.RESOURCE_TYPE_GROUP) ||
                (opts.resourceTypes[1] === SearchConstants.general.RESOURCE_TYPE_USER && opts.resourceTypes[0] === SearchConstants.general.RESOURCE_TYPE_GROUP)
            )
        ) {
            eventName = 'searchCanInteract';
        } else if (searchType.indexOf('-library') !== -1) {
            eventName = 'searchLibrary';
            params.library = searchType.split('-')[0];
        }

        params.type = searchType;
        params.q = opts.q;
        params.resourceTypes = opts.resourceTypes;
        params.start = parseInt(opts.start, 10) || 0;
        params.nrOfResults = results.results.length;
        client.track(eventName, params);
        client.people.increment(params.distinct_id, eventName);
    });
};
