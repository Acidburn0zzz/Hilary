/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var ConfigAPI = require('oae-config');
var sanitize = require('validator').sanitize;
var Validator = require('oae-util/lib/validator').Validator;

var PrincipalsConfig = ConfigAPI.config('oae-principals');

/**
 * Gets the terms and conditions for a tenant.
 * If the T&C for a given locale cannot be found, the default T&C will be returned.
 *
 * @param  {Context}    ctx         The current context
 * @param  {String}     locale      The locale you wish to retrieve the T&C in. If it could not be found, the default T&C will be used
 * @return {Object}                 An object that holds a `text` key with the terms and conditions in the requested locale and a `lastUpdate` key that holds the timestamp when the config was last updated
 */
var getTermsAndConditions = module.exports.getTermsAndConditions = function(ctx, locale) {
    // Fall back to the `default` locale
    locale = locale || 'default';

    // Grab the internationalizable field. This will return an object with each T&C keyed against its locale
    var termsAndConditions = PrincipalsConfig.getValue(ctx.tenant().alias, 'termsAndConditions', 'text');

    return {
        'text': termsAndConditions[locale] || termsAndConditions['default'],
        'lastUpdate': PrincipalsConfig.getLastUpdated(ctx.tenant().alias, 'termsAndConditions', 'text').getTime()
    };
};

/**
 * Checks if a users needs to (re-)accept the terms and conditions
 *
 * @param  {Context}    ctx         The current context
 * @return {Boolean}                Whether or not the current user needs to re-accept the terms and conditions
 */
var needsToAcceptTermsAndConditions = module.exports.needsToAcceptTermsAndConditions = function(ctx) {
    // Anonymous users can't accept anything
    if (!ctx.user()) {
        return false;
    }

    // If there are no T&C, the user can't accept anything
    var isEnabled = PrincipalsConfig.getValue(ctx.tenant().alias, 'termsAndConditions', 'enabled');
    if (!isEnabled) {
        return false;
    }

    // Admins don't need to accept anything either
    if (ctx.user().isAdmin(ctx.tenant().alias)) {
        return false;
    }

    // If the user originates from another tenant, he doesn't need to accept the T&C
    if (ctx.user().tenant.alias !== ctx.tenant().alias) {
        return false;
    }

    // This tenant has T&C. We need to check the user has accepted the T&C since the last change
    var lastUpdated = PrincipalsConfig.getLastUpdated(ctx.tenant().alias, 'termsAndConditions', 'text');
    return (ctx.user().acceptedTC < lastUpdated.getTime());
};
