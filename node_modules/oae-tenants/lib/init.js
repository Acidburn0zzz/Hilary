/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 * 
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var schema = require('./schema');
var TenantAPI = require('oae-tenants');

module.exports = function(app, callback) {

    registerGlobalRestEndpoints(app);

    // create the schema and register / start active tenants
    schema.ensureSchema(function(err) {
        if (err) {
            return callback(err);
        }

        TenantAPI.getAllTenants(function(err, tenants) {
            if (err) {
                return callback(err);
            }

            for (var t = 0; t < tenants.length; t++) {
                TenantAPI.startTenant(tenants[t]);
            }

            callback();
        });
    });
}

/**
 * Register the global tenant end-points for interacting with tenants.
 */
var registerGlobalRestEndpoints = function(app) {
    
    app.server.post('/api/tenant/create', function(req, res) {
        TenantAPI.createTenant(req.body.id, req.body.name, req.body.description, req.body.port, req.body.baseurl, function(err) {
            if (err) {
                return res.send(err.code, err.msg);
            }
            res.send(200, 'New tenant "' + req.body.name + '" has been fired up on port ' + req.body.port);
        });
    });

    app.server.post('/api/tenant/start', function(req, res) {
        TenantAPI.putTenantsInMaintenanceMode(req.body.tenants, false, function(err) {
            if (err) {
                return res.send(err.code, err.msg);
            }
            res.send(200);
        });
    });

    app.server.post('/api/tenant/stop', function(req, res) {
        TenantAPI.putTenantsInMaintenanceMode(req.body.tenants, true, function(err) {
            if (err) {
                return res.send(err.code, err.msg);
            }
            res.send(200);
        });
    });

    app.server.post('/api/tenant/delete', function(req, res) {
        TenantAPI.deleteTenants(req.body.tenants, function(err) {
            if (err) {
                return res.send(err.code, err.msg);
            }
            res.send(200);
        });
    });

    app.server.get('/api/tenants', function(req, res, next) {
        TenantAPI.getAllTenants(function(err, tenants) {
            if (err) {
                return res.send(err.code, err.msg);
            }
            res.send(200, tenants);
        });
    });

}