/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var assert = require('assert');
var request = require('request');
var util = require('util');

/**
 * When we encounter an unexpected status code.
 * @param {Number} code    An HTTP Status code.
 * @param {String} message What the body was.
 */
var RestError = module.exports.RestError = function RestError(code, message) {
  this.name = 'RestError';
  this.message = message;
  this.code = code;
};
util.inherits(RestError, Error);

/**
 * When we encounter a local problem (ie: not something that the server did.)
 * @param {String} message A message trying to explain what went wrong.
 */
var OaeError = module.exports.OaeError = function OaeError(message) {
  this.name = 'OaeError';
  this.message = message;
  this.code = 500;
};
util.inherits(OaeError, Error);


/**
 * Perform a local user login using the REST API.
 *
 * @param {Context}         context         A context object that can be used to log on.
 * @param {Function(err)}   callback        Standard callback function
 * @param {Object}          callback.err    Error object containing error message (if any)
 */
var login = module.exports.login = function(context, callback) {
    request.post({
        'url': 'http://' + context.baseUrl + '/api/auth/login',
        'method': 'POST',
        'form': {
            'username': context.user.username,
            'password': context.user.password
        }
    },function(err, response, body) {
        if (err) {
            return callback(new OaeError('Something went wrong trying to contact the server.'));
        }
        callback();
    });
};

/**
 * Perform a local user logout using the REST API.
 *
 * @param {Context}         context         A context object that can be used to log out.
 * @param {Function(err)}   callback        Standard callback function
 * @param {Object}          callback.err    Error object containing error message (if any)
 */
var logout = module.exports.logout = function(context, callback) {
    request.post({
        'uri': 'http://' + context.baseUrl + '/api/auth/logout',
        'followRedirect': false
    }, function(err, response, body) {
        if (err) {
            return callback(new OaeError('Something went wrong trying to contact the server.'));
        }
        callback();
    });
};

/**
 * Performs a local user login using the REST API if the passed in context is different
 * than the currently logged in user.
 *
 * @param {Context}         context         A context object that can be used to log on.
 * @param {Function(err)}   callback        Standard callback function
 * @param {Object}          callback.err    Error object containing error message (if any)
 */
var switchUser = module.exports.switchUser = function (context, callback) {
    if (request.userid !== context.user.id) {
        logout(context, function(err) {
            if (err) {
                return callback(err);
            }
            login(context, function(err) {
                if (!err) {
                    request.userid = context.user.id;
                }
                callback(err);
            });
        });
    } else {
        callback();
    }
};