/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 * 
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var assert = require('assert');
var fs = require('fs');

var IO = require('oae-util/lib/io');

var datadir = __dirname + '/data/';

describe('IO', function() {

    describe('#copyFile()', function(callback) {

        it('duplicates a file', function(callback) {
            var sourceFile = datadir + 'banditos.txt';
            var destFile = datadir + 'refreshments.txt';
            IO.copyFile(sourceFile, destFile, function(err) {
                assert.ifError(err);
                // Verify that the source and dest files contain the same data
                var sourceEnded = false;
                var destEnded = false;
                var sourceText = '';
                var destText = '';

                var src = fs.ReadStream(sourceFile);
                src.on('data', function(d) {
                    sourceText += d;
                });
                var dest = fs.ReadStream(destFile);
                dest.on('data', function(d) {
                    destText += d;
                });

                src.on('end', function() {
                    sourceEnded = true;
                    if (destEnded) {
                        assert.equal(sourceText, destText);
                        callback();
                    }
                });
                dest.on('end', function() {
                    destEnded = true;
                    if (sourceEnded) {
                        assert.equal(sourceText, destText);
                        callback();
                    }
                });
            });
        });


    });

    describe('#moveFile()', function(callback) {

        it('renames a file', function(callback) {
            var sourceFile = datadir + 'refreshments.txt';
            var destFile = datadir + 'refreshments-banditos.txt';
            IO.moveFile(sourceFile, destFile, function(err) {
                assert.ifError(err);

                // Verify that the source file is removed
                fs.stat(sourceFile, function(err){
                    assert.equal(err.code, 'ENOENT');
                });

                // Verify that the source and dest files contain the same data
                var sourceEnded = false;
                var destEnded = false;
                var sourceText = '';
                var destText = '';

                var src = fs.ReadStream(datadir + 'banditos.txt');
                src.on('data', function(d) {
                    sourceText += d;
                });
                var dest = fs.ReadStream(destFile);
                dest.on('data', function(d) {
                    destText += d;
                });

                src.on('end', function() {
                    sourceEnded = true;
                    if (destEnded) {
                        assert.equal(sourceText, destText);
                        fs.unlink(destFile, callback);
                    }
                });
                dest.on('end', function() {
                    destEnded = true;
                    if (sourceEnded) {
                        assert.equal(sourceText, destText);
                        fs.unlink(destFile, callback);
                    }
                });
            });
        });
    });
});
